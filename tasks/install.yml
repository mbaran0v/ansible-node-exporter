---
- name: Install dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ node_exporter_dependencies }}"

- name: Create the node_exporter group
  group:
    name: "{{ node_exporter_system_group }}"
    state: present
    system: true

- name: Create the node_exporter user
  user:
    name: "{{ node_exporter_system_user }}"
    groups: "{{ node_exporter_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
    home: "{{ node_exporter_root_dir }}"

- name: create node_exporter directories
  file:
    path: "{{ node_exporter_root_dir }}"
    state: directory
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
    mode: 0755

- name: check if installed
  stat:
    path: "{{ node_exporter_root_dir }}/releases/{{ node_exporter_version }}/node_exporter"
  register: node_exporter_bin

- name: create temporary deploy dir
  file:
    path: "{{ node_exporter_root_dir }}/tmp"
    state: directory

- name: download archive to temporary folder
  get_url:
    url: "{{ node_exporter_download_url }}"
    dest: "{{ node_exporter_root_dir }}/tmp/{{ node_exporter_archive_name }}"
    remote_src: true
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2

- name: unpack binaries
  unarchive:
    src: "{{ node_exporter_root_dir }}/tmp/{{ node_exporter_archive_name }}"
    dest: "{{ node_exporter_root_dir }}/tmp"
    remote_src: yes
    creates: "{{ node_exporter_root_dir }}/tmp/{{ node_exporter_extracted_dir }}/node_exporter"
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
    mode: 0755

- name: initialize the deploy root and gather facts
  deploy_helper:
    path: "{{ node_exporter_root_dir }}"
    release: "{{ node_exporter_version }}"
    state: present

- name: create release directory
  file:
    dest: "{{ deploy_helper.new_release_path }}"
    state: directory
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
    mode: 0750

- name: propagate binaries
  command: mv {{ node_exporter_root_dir }}/tmp/{{ node_exporter_extracted_dir }}/{{ item }} {{ deploy_helper.new_release_path }}
  tags: skip_ansible_lint
  with_items:
    - node_exporter

- name: create systemd service unit
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart node_exporter

- name: finalize the deploy, removing the unfinished file and switching the symlink
  deploy_helper:
    path: "{{ node_exporter_root_dir }}"
    release: "{{ deploy_helper.new_release }}"
    state: finalize
  notify:
    - restart node_exporter
